---
- name: upgrade all packages
  apt: update_cache=yes

- name: install required packages
  apt: pkg={{ item }} state=latest
  with_items: 
  - bind9
  - dnsutils

- set_fact: 
    zone_file: "db.{{ dns_zone }}"
    serial_number: 1

- name: is zone file exists?
  stat: path=/etc/bind/{{ zone_file }}
  register: zone_file_stat

- name: fetching last serial number
  shell: "less /etc/bind/{{ zone_file }} | grep '; Serial' | awk '{print $1}'"
  register: last_serial_number
  when: zone_file_stat.stat.exists

- debug: var=last_serial_number 
  when: zone_file_stat.stat.exists

- set_fact:
    serial_number: "{{ last_serial_number.stdout_lines[0] }}"
  when: zone_file_stat.stat.exists 

- debug: var=serial_number

- name: copy zone_file
  template: src=db_dns_zone_.j2 dest=/etc/bind/{{ zone_file }} owner=root group=bind
  register: zone_file_copy

- debug: var=zone_file_copy.changed

- name: increment serial number if file copy changed
  set_fact:
    serial_number: "{{ serial_number | int + 1 }}"
  when: zone_file_copy.changed   

- debug: var=serial_number

- name: copy the configs
  template: src={{ item.src }} dest=/etc/bind/{{ item.dest }} owner=root group=bind
  with_items:
  - { src: 'named.conf.options.j2', dest: 'named.conf.options' }
  - { src: 'named.conf.local.j2', dest: 'named.conf.local' }
  - { src: 'db_dns_zone_.j2', dest: '{{ zone_file }}' }
  - { src: 'db.192.j2', dest: 'db.192' }

- name: restart DNS service
  service: name=bind9 state=restarted enabled=true