---
- name: install required packages
  apt: pkg={{ item }} state=latest
  with_items: 
    - build-essential
    - libncurses5-dev
    - tcl
    - tcl-dev
    - tcl8.6-dev

- name: create 'openlava' user
  user: name=openlava comment="Openlava User" createhome=no group=openlava state=present

- name: download openlava tar
  get_url: url={{ openlava_tar_url }} dest=/tmp
  register: openlava_tar

- debug: var=openlava_tar.dest

- set_fact: openlava_sources=/tmp/openlava_sources

- name: create openlava 'sources' directory
  file: path={{ openlava_sources }} state=directory

- name: unzip openlava tar
  unarchive: src={{ openlava_tar.dest }} dest={{ openlava_sources }} copy=no

- name: find openlava unzip directory
  shell: ls {{ openlava_sources }}
  register: openlava_dir

- debug: var=openlava_dir.stdout

- set_fact:
    openlava_sources: "{{ openlava_sources }}/{{ openlava_dir.stdout }}"
    openlava_build_dest: "/opt/{{ openlava_dir.stdout }}"

- debug: var=openlava_build_dest

- debug: var=openlava_sources

- name: build openlava sources
  shell: "{{ item }}"
  args:
    chdir: "{{ openlava_sources }}"
    creates: "{{ openlava_build_dest }}/bin/bsub" 
  with_items:
  - "./configure"
  - "make"
  - "make install"

- name: copy openlava config files from sources
  shell: cp {{ item }} {{ openlava_build_dest }}/etc
  args:
    chdir: "{{ openlava_sources }}/config"
  with_items:
  - lsb.hosts 
  - lsb.params 
  - lsb.queues 
  - lsb.users 
  - lsf.cluster.openlava 
  - lsf.conf 
  - lsf.shared 
  - lsf.task
  - openlava.csh
  - openlava.sh

- name: copy openlava service script to init.d
  shell: cp {{ openlava_build_dest }}/etc/openlava /etc/init.d

- name: copy openlava profiles
  shell: cp {{ openlava_build_dest }}/etc/openlava.* /etc/profile.d

- name: ensure openlava build destination is owned by openlava user
  file: path={{ openlava_build_dest }}  state=directory recurse=yes owner=openlava group=openlava

- name: update lsf.cluster.openlava
  lineinfile: 
    dest: "/opt/openlava-3.0/etc/lsf.cluster.openlava"
    regexp: '^{{ ansible_hostname }}.*'
    insertbefore: "End\\s*Host"
    line: "{{ ansible_hostname  }}      !       !      1      -      - "
    state: present
    backup: yes

- name: start openlava service
  service: name=openlava enabled=true state=started