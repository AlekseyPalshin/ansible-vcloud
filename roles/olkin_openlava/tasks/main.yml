---
- name: upgrade all packages
  apt: update_cache=yes

- name: install required packages
  apt: pkg={{ item }} state=latest
  with_items: 
    - tcl-dev
    - psmisc
    - unzip
    - build-essential
    - libncurses5-dev
    - tcl
    - tcl-dev
    - tcl8.6-dev

- name: replace loopback for hostname
  lineinfile: 
    dest: /etc/hosts
    regexp: '^127.0.1.1.*{{ ansible_hostname }}'
    line: '#127.0.1.1 {{ ansible_hostname }}'
    
- set_fact: openlava_sources=/tmp/openlava_sources

- name: create openlava 'sources' directory
  file: path={{ openlava_sources }} state=directory

- name: download and unzip openlava sources tar
  unarchive: src={{ openlava_tar_url }} dest={{ openlava_sources }} copy=no
  register: unzip_res

- debug: var=unzip_res

- name: find openlava version name
  shell: ls {{ openlava_sources }}
  register: openlava_version

- debug: var=openlava_version.stdout 

- set_fact:
    openlava_sources: "{{ openlava_sources }}/{{ openlava_version.stdout }}"
    openlava_build_dest: "/opt/{{ openlava_version.stdout }}"

- debug: var=openlava_sources

- debug: var=openlava_build_dest

- name: build openlava from sources
  shell: "{{ item }}"
  args:
    chdir: "{{ openlava_sources }}"
    creates: "{{ openlava_build_dest }}/bin/bsub" 
  with_items:
  - "./configure"
  - "make"
  - "make install"

- name: copy openlava config files from sources
  shell: cp {{ item }} {{ openlava_build_dest }}/etc/{{ item }}
  args:
    chdir: "{{ openlava_sources }}/config"
  with_items:
  - lsb.hosts 
  - lsb.params 
  - lsb.queues 
  - lsb.users 
  - lsf.cluster.openlava 
  - lsf.conf 
  - lsf.shared 
  - lsf.task
  - openlava.csh
  - openlava.sh

- name: copy openlava service script to init.d
  shell: cp {{ openlava_build_dest }}/etc/openlava /etc/init.d

- name: copy openlava profiles
  shell: cp {{ openlava_build_dest }}/etc/openlava.* /etc/profile.d

- name: create 'openlava' group
  group: name=openlava state=present system=true

- name: create 'openlava' user
  user: name=openlava comment="Openlava User" createhome=no group=openlava state=present

- name: ensure openlava build destination is owned by openlava user
  file: path={{ openlava_build_dest }}  state=directory recurse=yes owner=openlava group=openlava

- name: update lsf.cluster.openlava
  lineinfile: 
    dest: "{{ openlava_build_dest }}/etc/lsf.cluster.openlava"
    regexp: '^{{ ansible_hostname }}.*'
    insertbefore: "End\\s*Host"
    line: "{{ ansible_hostname  }}                  IntelI5      linux   1      3.5    (cs)"
    state: present
    backup: yes
    
- name: start openlava service
  service: name=openlava enabled=true state=started