---
- name: fail if not Ubuntu 14.04
  fail:
    msg: "{{ ansible_distribution_version }} is not an acceptable version of Ubuntu for this role"
  when: "ansible_distribution_version not in ['14.04', '14.10']"

- name: install the latest docker 
  shell: curl -sSL https://get.docker.com/ | sed 's/lxc-docker/lxc-docker-{{ docker_version }}/' | sh

- name: enable port forwarding
  lineinfile: 
    dest: /etc/default/ufw
    regexp: ^DEFAULT_FORWARD_POLICY=
    line: DEFAULT_FORWARD_POLICY="ACCEPT"
  notify: reload ufw

- meta: flush_handlers

- name: enable memory limitation in cgroupd
  lineinfile: 
    dest: /etc/default/grub
    regexp: ^GRUB_CMDLINE_LINUX=
    line: GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1"
  register: grub_config

- name: reload grub config
  command: update-grub
  when: grub_config | changed
  notify: reboot vm

- meta: flush_handlers

- name: waiting 2 minutes for server to come back
  local_action: wait_for timeout=120
  sudo: false
  when: grub_config | changed

- name: test docker installation
  shell: docker run hello-world
  
#- name: remove local docker group 
#  shell: groupdel docker
#  when: ldap_installed=="yes"

#- name: get docker group
#  shell: "getent group | grep 'docker:*' | cut '-d:' -f3"
#  register: docker_group
#  when: ldap_installed=="yes" 

#- debug: msg="Docker group in LDAP {{docker_group.stdout}}"
#  when: ldap_installed=="yes"

#- name: fail if docker_group is not defined on ldap
#  fail:
#    msg: "There are no docker group on LDAP server"
#  when: ldap_installed=="yes" and (docker_group.stdout | int  < 10000)

#- name: create docker group
#  lineinfile: 
#     dest: /etc/group
#     insertbefore: "EOF"
#     line: 'docker:x:{{ docker_group.stdout }}:'
#  when: ldap_installed=="yes" and (docker_group.stdout | int  > 10000)

#- name: restart docker
#  shell: restart docker
#  when: ldap_installed=="yes" 

#- name: add local group docker
#  shell: usermod -aG docker {{ ansible_ssh_user }}
#  when: ldap_installed=="no"
