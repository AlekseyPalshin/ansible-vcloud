#!/usr/bin/env bash
set -o errexit

###########################################################################################
# Program: ngseasy
# Version 1.0-r001
# Author: Stephen Newhouse (stephen.j.newhouse@gmail.com); Amos Folarin (amosfolarin@gmail.com)
###########################################################################################
#
#    Copyright (C) 2015  Stephen Jeffrey Newhouse (bluecell.io)
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#
###########################################################################################

###########################################################################################
## Set version and run date
###########################################################################################
NGSEASYVERSION="1.0-r001"
RUNDATE=`date +"%d%m%y"`

echo -e "\n\n###########################################################################################"
echo -e "#"
echo -e "# Program: ngseasy"
echo -e "# Version ${NGSEASYVERSION}"
echo -e "# Authors: Stephen Newhouse (stephen.j.newhouse@gmail.com); Amos Folarin (amosfolarin@gmail.com)"
echo -e "#"
echo -e "# Copyright (C) 2015  Stephen Jeffrey Newhouse and Amos Folarin"
echo -e "# NGSeasy (aka ngseasy) Version ${NGSEASYVERSION} comes with ABSOLUTELY NO WARRANTY;"
echo -e "# for details see the GNU General Public License."
echo -e "# This is free software, and you are welcome to redistribute it under certain conditions;"
echo -e "# see the GNU General Public License for details."
echo -e "#"
echo -e "###########################################################################################\n\n"

echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"[Log:START]":[${USER}]:[`uname -a`]"
sleep 1s

###########################################################################################
## global logging fuction
###########################################################################################

function logger_ngseasy() {
 message=${1}
 mylogfile=${2}
 echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"${message}":[${USER}]:[`uname -a`]" >> ${mylogfile}.log;
 echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"${message}":[${USER}]:[`uname -a`]"
}

###########################################################################################
## global usage
###########################################################################################

function usage_ngseasy() {
    echo "
Program: ngseasy
Version 1.0-r001
Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)

usage:   ngseasy -c <config_file> -d <project_directory>

options:  -c  STRING	configuration file
          -d  STRING	project directory
          -h  NULL	show this message
"
}

###########################################################################################
## default options
###########################################################################################

config_tsv=""
project_directory=""

###########################################################################################
## get options for command line args
###########################################################################################

while  getopts "hc:d:" opt
do

  case ${opt} in

   h)
   usage_ngseasy #print help
   exit 0
   ;;

   c)
   config_tsv=${OPTARG}
   echo -e "CONFIG FILE [-c] = ${config_tsv}"
   ;;

   d)
   project_directory=${OPTARG}
   echo -e  "PROJECT DIR [-d] = ${project_directory}"
   ;;

   esac
done

###########################################################################################
## Check options passed in.
###########################################################################################

if [[ -z "$config_tsv" ]]; then
    echo -e "\nERROR: No options were passed. Exiting"
    sleep 1s
	usage_ngseasy
	sleep 1s
	exit 1
fi

###########################################################################################
## Make log file ##
###########################################################################################

## strip path if user enters config with full path specified
configfile_name=`basename ${config_tsv}`

# set logile name and make it if it does not exist
config_run_log="${project_directory}/run_logs/ngseasy.${NGSEASYVERSION}.${configfile_name}.${RUNDATE}"

if [[ ! -e "${config_run_log}.log" ]]
then
	logger_ngseasy "[ngseasy]:Making log file [${config_run_log}.log]"

	touch ${config_run_log}.log

	logger_ngseasy "[ngseasy]:Log file [${config_run_log}.log]"

else
	logger_ngseasy "[ngseasy]:Log file [${config_run_log}.log]"

fi

###########################################################################################
## check ${project_directory} exists.
###########################################################################################
logger_ngseasy "[ngseasy]:Check if project dir [${project_directory}] exists"

if [[ ! -d "${project_directory}" ]]
  then
	  usage_ngseasy;
	  logger_ngseasy "[ngseasy]:ERROR:${project_directory} does not exist. Exiting."
	  sleep 2s
	  exit 1;
fi


###########################################################################################
## check config_tsv exists.
###########################################################################################

# find out where we are running from
my_current_dirctory=`pwd`

logger_ngseasy "[ngseasy]:Current working directory [${my_current_dirctory}]" ${config_run_log}
logger_ngseasy "[ngseasy]:Config file set as [${config_tsv}]" ${config_run_log}
sleep 1s

## check if user has used full path to specify config_tsv
# strip path if user enters config with full path specified
# and the move to the dir containing the config_tsv
#
config_directory_path=`dirname ${config_tsv}`

if [[ "${config_directory_path}" == "." ]]; then
	working_dir="${my_current_dirctory}"
	logger_ngseasy "[ngseasy]:Path to config file directory detected as [${working_dir}]" ${config_run_log}
	logger_ngseasy "[ngseasy]:Setting Path to config file" ${config_run_log}
	logger_ngseasy "[ngseasy]:Config file location set to [${working_dir}]" ${config_run_log}
	logger_ngseasy "[ngseasy]:Moving to Config file location [${working_dir}] to make life easy" ${config_run_log}

	# move to location of config file
	cd ${working_dir}

	# check if file exists
	configfile_name=`basename ${config_tsv}`

if [[ ! -e "./${configfile_name}" ]]; then
	logger_ngseasy "[ngseasy]:ERROR:Config file [${config_tsv}] does not exist. Exiting" ${config_run_log}
	sleep 1s
	exit 1
else
	logger_ngseasy "[ngseasy]:Config file name [${configfile_name}] detected" ${config_run_log}
fi

else
	working_dir="${config_directory_path}"
	logger_ngseasy "[ngseasy]:Path to config file directory detected as [${working_dir}]" ${config_run_log}
	logger_ngseasy "[ngseasy]:Setting Path to config file" ${config_run_log}
	logger_ngseasy "[ngseasy]:Config file location set to [${working_dir}]" ${config_run_log}
	logger_ngseasy "[ngseasy]:Moving to Config file location [${working_dir}] to make life easy" ${config_run_log}

	# move to location of config file
	cd ${working_dir}

	# check if file exists
	configfile_name=`basename ${config_tsv}`

if [[ ! -e "./${configfile_name}" ]]; then
	logger_ngseasy "[ngseasy]:ERROR:Config file [${config_tsv}] does not exist. Exiting" ${config_run_log}
	sleep 1s
	exit 1
else
	logger_ngseasy "[ngseasy]:Config file name [${configfile_name}] detected" ${config_run_log}
fi

fi

############################################################################################
## check Num feilds in  ${config_tsv}
###########################################################################################

logger_ngseasy "[ngseasy]:Reading [${config_tsv}] " ${config_run_log}

numcols=`awk '{ print NF }' ${config_tsv} | sort -g | head -1`

logger_ngseasy "[ngseasy]:Number of fields detected [${numcols}] " ${config_run_log}

if [[  "${numcols}" -lt 23 ]]
then
    logger_ngseasy "[ngseasy]:ERROR:[${config_tsv}] format issue. Check your file! " ${config_run_log}
    sleep 1s
    exit 1;
else
    logger_ngseasy "[ngseasy]:Numcols of [${config_tsv}] ok:[$numcols]" ${config_run_log}
fi


###########################################################################################
## Set up Project Dir and Fastq Files
###########################################################################################

logger_ngseasy "[ngseasy]:Calling ngseasy_initiate_project" ${config_run_log}

	/bin/bash  ngseasy_initiate_project -c ${config_tsv} -d ${project_directory}  2>&1 | tee -a  ${config_run_log}.log
	wait

logger_ngseasy "[ngseasy]:Calling ngseasy_initiate_fastq" ${config_run_log}

	/bin/bash  ngseasy_initiate_fastq -c ${config_tsv} -d ${project_directory}  2>&1 | tee -a  ${config_run_log}.log
	wait

###########################################################################################
## FastQC: will run as many jobs as allowed by nproc on system
###########################################################################################

###########################################################################################
## check ${config_tsv}. is this a batch file or the orginal config file
###########################################################################################
logger_ngseasy "[ngseasy]:Checking [${config_tsv}] format" ${config_run_log}

hasheader=`sed 1q ${config_tsv} | grep PROJECT_ID | wc -l | awk '{print $1}'`

if [[ "${config_tsv}" == *.batch.* ]]
then
	logger_ngseasy "[ngseasy]:[${config_tsv}] is a BACTH file ie a subset of the original config file" ${config_run_log}
	CONFIG=${config_tsv}

###########################################################################################
## if header present then remove it
###########################################################################################
elif [[ "$hasheader" -eq 1 ]]
then
	logger_ngseasy "[ngseasy]:[${config_tsv}] header present...gonna remove this" ${config_run_log}
	logger_ngseasy "[ngseasy]:[cmd]:sed 1d ${config_tsv} > ${config_tsv}.tmp" ${config_run_log}
	sed 1d ${config_tsv} > ${config_tsv}.tmp
	CONFIG=${config_tsv}.tmp
else
	logger_ngseasy "[ngseasy]:[${config_tsv}] is seemingly perfect. Well Done" ${config_run_log}
	CONFIG=${config_tsv}
fi

###########################################################################################
## number of samples to run ####
###########################################################################################
numsamples=`wc -l ${CONFIG} | awk '{print $1}'`
logger_ngseasy "[ngseasy]:Number of samples [$numsamples]" ${config_run_log}

batchsize=$(( numsamples / 20 ))

batchsize=$(( batchsize == 0 ? 1 : batchsize ))

logger_ngseasy "[ngseasy]:Sample batchsize: ${batchsize}" ${RUNLOG}

###########################################################################################
## split config file into batches : N samples per batch. N samples == njobs
###########################################################################################
logger_ngseasy "[ngseasy]:splitting config file in to batches of at most [${batchsize}] samples" ${config_run_log}
logger_ngseasy "[ngseasy]:[cmd]:split -d -l ${batchsize} --additional-suffix=\".batch.config.tmp\" ${config_tsv}.tmp" ${config_run_log}
split -d -l ${batchsize} --additional-suffix=".batch.${config_tsv}.tmp" ${config_tsv}.tmp

###########################################################################################
## get file names to process
###########################################################################################

logger_ngseasy "[ngseasy]: Getting config file names to process " ${config_run_log}
batchfiles=`ls | grep batch`

###########################################################################################
## loop through config files and run fastqc ####
###########################################################################################

logger_ngseasy "[ngseasy]:START FASTQC LOOP" ${config_run_log}
timestamp=`date "+%w%H%M%S"`

for MYBATCH in `ls $batchfiles`
do
    RAND=`perl -e "print int(rand()*10);"`
    logger_ngseasy "[ngseasy]:[cmd]:ngseasy_fastqc -c ${MYBATCH} -d ${project_directory}" ${config_run_log}

    ###########################################################################################
    ## call ngseasy_fastqc
    ###########################################################################################
    #job_name="fastqc_${USER}_${MYBATCH}_$(date +%s)"
    #job_name="${USER}_${MYBATCH}_${timestamp}_fastqc"    by job name
    job_name="${timestamp}${RAND}fq"

    logger_ngseasy "[ngseasy]:Calling -c ${MYBATCH} -d ${project_directory} -j ${job_name}" ${config_run_log}

    /bin/bash  ngseasy_fastqc -c ${MYBATCH} -d ${project_directory} -j ${job_name} 2>&1 | tee -a  ${config_run_log}.log

    sleep 1s

    ###################################################################################
    ## Quality Trimming
    ###################################################################################
    dependency_string="ended('${job_name}')" 
    job_name="${timestamp}${RAND}tr"

    logger_ngseasy "[ngseasy]:Calling -c ${MYBATCH} -d ${project_directory} -j ${job_name}" ${config_run_log}

    /bin/bash  ngseasy_trimmomatic -c ${MYBATCH} -d ${project_directory} -j ${job_name} -w ${dependency_string} 2>&1 | tee -a  ${config_run_log}.log
  
    sleep 1s

    ###################################################################################
    ## Alignment
    ###################################################################################
    dependency_string="ended('${job_name}')" 
    job_name="${timestamp}${RAND}al"

    logger_ngseasy "[ngseasy]:Calling -c ${MYBATCH} -d ${project_directory} -j ${job_name}" ${config_run_log}

    /bin/bash  ngseasy_alignment -c ${MYBATCH} -d ${project_directory} -j ${job_name} -w ${dependency_string} 2>&1 | tee -a  ${config_run_log}.log

    sleep 1s

    ###################################################################################
    ## Indel realignment
    ###################################################################################
    #dependency_string="done('${job_name}')" 
    #job_name="${USER}_${MYBATCH}_${timestamp}_realignment"

    #logger_ngseasy "[ngseasy]:Calling -c ${MYBATCH} -d ${project_directory} -j ${job_name}" ${config_run_log}

    #/bin/bash  ngseasy_alignment -c ${MYBATCH} -d ${project_directory} -j ${job_name} -w ${dependency_string} 2>&1 | tee -a  ${config_run_log}.log

    #sleep 1s


done

#logger_ngseasy "[ngseasy]:END ngseasy_fastqc" ${config_run_log}

###################################################################################
## Quality Trimming
###################################################################################

#logger_ngseasy "[ngseasy]:Calling ngseasy_trimmomatic" ${config_run_log}
    
#job_name="trimmomatic_${USER}_${config_tsv}_$(date +%s)"

#/bin/bash  ngseasy_trimmomatic -c ${config_tsv} -d ${project_directory} -j ${job_name} -w "done('fastqc_${USER}_*')" 2>&1 | tee -a  ${config_run_log}.log

#dependency_string="done('${job_name}')"

###################################################################################
## Alignment
###################################################################################

#logger_ngseasy  "[ngseasy]:Calling ngseasy_alignment"  ${config_run_log}

#job_name="alignment_${config_tsv}_$(date +%s)"

#/bin/bash  ngseasy_alignment -c ${config_tsv} -d ${project_directory} -j ${job_name} -w ${dependency_string} 2>&1 | tee -a  ${config_run_log}.log

#ependency_string="done('${job_name}')"

## to add: option if NCPU less than nproc or 8, 16 then call mulitple alignments at the same

###################################################################################
## Indel realignment
###################################################################################

#logger_ngseasy  "[ngseasy]:Calling ngseasy_realn"  ${config_run_log}

#job_name="realn_${config_tsv}_$(date +%s)"

#/bin/bash ngseasy_realn -c ${config_tsv} -d ${project_directory} -j ${job_name} -w ${dependency_string} 2>&1 | tee -a  ${config_run_log}.log

#dependency_string="done('${job_name}')"

###################################################################################
## Base Quality Score Recalibration
###################################################################################

#logger_ngseasy  "[ngseasy]:Calling ngseasy_bsqr"  ${config_run_log}

#job_name="bsqr_${config_tsv}_$(date +%s)"

#/bin/bash ngseasy_bsqr -c ${config_tsv} -d ${project_directory} -j ${job_name} -w ${dependency_string} 2>&1 | tee -a  ${config_run_log}.log

#dependency_string="done('${job_name}')"

##################################################################################
## Variant calling
###################################################################################

#job_name="variant_calling_${config_tsv}_$(date +%s)"

#logger_ngseasy  "[ngseasy]:Calling ngseasy_variant_calling"  ${config_run_log}

#/bin/bash ngseasy_variant_calling -c ${config_tsv} -d ${project_directory} -j ${job_name} -w ${dependency_string} 2>&1 | tee -a  ${config_run_log}.log

#dependency_string="done('${job_name}')"

###################################################################################
## Alignment statistics
###################################################################################

#logger_ngseasy  "[ngseasy]:Calling ngseasy_alignment_qc"  ${config_run_log}
#	/bin/bash ngseasy_alignment_qc -c ${config_tsv} -d ${project_directory} 2>&1 | tee -a  ${config_run_log}.log


###################################################################################
## CNV Calling: coming soon
###################################################################################

###################################################################################
## Annotation: coming soon
###################################################################################

###################################################################################
## NGS Report: coming soon
###################################################################################

# sex check with chanjo
# alias full_clinical_freebayes NO GATK NO REAL NO RECAL OK FOR LOCKED UP SYSTEM BUT
# NOT FOR POP OR COMP BTW SITES
